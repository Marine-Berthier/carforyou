{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/html/Perso/carforyou/pages/makemodelselect.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar MakeModelSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(MakeModelSelect, _React$Component);\n\n  var _super = _createSuper(MakeModelSelect);\n\n  function MakeModelSelect(props) {\n    var _this;\n\n    _classCallCheck(this, MakeModelSelect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", function () {\n      console.log(\"Update\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"makeSelected\", function (event) {\n      _this.setState({\n        showTypes: false\n      });\n\n      _this.setState({\n        brand: event.target.value\n      });\n\n      _this.setState({\n        accessToModel: false\n      });\n\n      axios.get(\"https://catalogue-service.preprod.carforyou.ch:443/api/makes/key/\".concat(event.target.value, \"/models\")).then(function (res) {\n        var models = res.data;\n\n        _this.setState({\n          models: models\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modelSelected\", function (event) {\n      _this.setState({\n        showTypes: false\n      });\n\n      axios.get(\"https://catalogue-service.preprod.carforyou.ch:443/api/types?makeKey=\".concat(_this.state.brand, \"&modelKey=\").concat(event.target.value)).then(function (res) {\n        var types = res.data.content;\n\n        _this.setState({\n          types: types\n        });\n\n        if (_this.state.types.length > 0) {\n          _this.setState({\n            showTypes: true\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      make: [],\n      models: [],\n      types: [],\n      brand: \"\",\n      accessToModel: true,\n      showTypes: false\n    }; // Call our API to collect brands at construction\n\n    axios.get(\"https://catalogue-service.preprod.carforyou.ch:443/api/makes\").then(function (res) {\n      var make = res.data;\n\n      _this.setState({\n        make: make\n      });\n    });\n    return _this;\n  }\n\n  _createClass(MakeModelSelect, [{\n    key: \"render\",\n    // Function to reset the type input, depending on the model we want to show or hide this input (because some models does not have a type list) => don't need it actually.\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          make = _this$state.make,\n          models = _this$state.models,\n          types = _this$state.types;\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Make your selection\"), __jsx(\"div\", {\n        id: \"inputs-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"make\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Choose a brand:\"), __jsx(\"select\", {\n        onChange: this.makeSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, \"Brands' list\"), make.map(function (brand, i) {\n        return __jsx(\"option\", {\n          key: i,\n          value: brand.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }\n        }, brand.name);\n      }))), __jsx(\"div\", {\n        className: \"input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Choose a model:\"), __jsx(\"select\", {\n        disabled: this.state.accessToModel,\n        onChange: this.modelSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, \"Models' list\"), models.map(function (model, i) {\n        return __jsx(\"option\", {\n          key: i,\n          value: model.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, model.name);\n      }))), __jsx(\"div\", {\n        className: \"input \" + (this.state.showTypes ? \"\" : \"hide\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"Type list:\"), __jsx(\"select\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, \"Types' list\"), types.map(function (type, i) {\n        return __jsx(\"option\", {\n          key: i,\n          value: type.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, type.fullName);\n      })))));\n    }\n  }]);\n\n  return MakeModelSelect;\n}(React.Component);\n\nexport default MakeModelSelect;","map":{"version":3,"sources":["/var/www/html/Perso/carforyou/pages/makemodelselect.tsx"],"names":["React","axios","MakeModelSelect","props","console","log","event","setState","showTypes","brand","target","value","accessToModel","get","then","res","models","data","state","types","content","length","make","makeSelected","map","i","key","name","modelSelected","model","type","id","fullName","Component"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport axios from \"axios\"\n\n\nclass MakeModelSelect extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      make: [],\n      models: [],\n      types: [],\n      brand: \"\",\n      accessToModel: true,\n      showTypes: false,\n    }\n\n    // Call our API to collect brands at construction\n\n    axios\n      .get(`https://catalogue-service.preprod.carforyou.ch:443/api/makes`)\n      .then((res) => {\n        const make = res.data\n        this.setState({ make })\n      })\n  }\n\n  componentDidUpdate = () => {\n    console.log(\"Update\");\n  }\n\n  // Function to collect models from the API once brand is chosen\n  // For each model selection you want first to hide the type selection / Also update 'Brand' in our state, as we will need this information for the next step / Finally turn access model to false in order to be able to access the model input.\n\n  makeSelected = (event) => {\n    this.setState({ showTypes: false })\n    this.setState({ brand: event.target.value })\n    this.setState({ accessToModel: false })\n    axios\n      .get(\n        `https://catalogue-service.preprod.carforyou.ch:443/api/makes/key/${event.target.value}/models`\n      )\n      .then((res) => {\n        const models = res.data\n        this.setState({ models })\n      })\n  }\n\n  // Function to collect types from the API once model is chosen // display Types input only if the array it not empty. \n\n  modelSelected = (event) => {\n    this.setState({ showTypes: false })\n    axios\n      .get(\n        `https://catalogue-service.preprod.carforyou.ch:443/api/types?makeKey=${this.state.brand}&modelKey=${event.target.value}`\n      )\n      .then((res) => {\n        const types = res.data.content\n        this.setState({ types })\n        if (this.state.types.length > 0) {\n          this.setState({ showTypes: true })\n        }\n      })\n  }\n\n  // Function to reset the type input, depending on the model we want to show or hide this input (because some models does not have a type list) => don't need it actually.\n\n  \n  \n\n  render() {\n    const { make, models, types } = this.state\n\n    return (\n      <>\n        <h1>Make your selection</h1>\n\n        <div id=\"inputs-container\">\n          <div className=\"input\">\n            <label htmlFor=\"make\">Choose a brand:</label>\n            <select onChange={this.makeSelected}>\n              <option value=\"\" disabled selected>\n                Brands' list\n              </option>\n              {make.map((brand, i) => (\n                <option key={i} value={brand.key}>\n                  {brand.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input\">\n            <label htmlFor=\"model\">Choose a model:</label>\n            <select\n              disabled={this.state.accessToModel}\n              onChange={this.modelSelected}\n            >\n              <option value=\"\" disabled selected>\n                Models' list\n              </option>\n              {models.map((model, i) => (\n                <option key={i} value={model.key}>\n                  {model.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className={\"input \" + (this.state.showTypes ? \"\" : \"hide\")}>\n            <label htmlFor=\"type\">Type list:</label>\n            <select>\n              <option value=\"\" disabled selected>\n                Types' list\n              </option>\n              {types.map((type, i) => (\n                <option key={i} value={type.id}>\n                  {type.fullName}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MakeModelSelect\n"]},"metadata":{},"sourceType":"module"}